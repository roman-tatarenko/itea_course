14/07/2021 =>
Типы данных, comprehensions, объекты
Homework:
Написать программу, которая запрашивает у пользователя строку чисел, разделённых пробелом.
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом
и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной
ранее сумме и после этого завершить программу.
====================================================================================================================

17/07/2021 =>
Маппер, лямбда функции, *args, **kwargs, цикл for, область видимости переменных, декораторы.
Homework:
1. Написать декоратор, который будет печатать на экран время работы функции (пользуемся datetime).
2. Написать функцию для вычислений ряда чисел Фибоначчи (можно через цикл, можно через рекурсию).
3. Реализовать функцию, которая принимает три позиционных аргумента и возвращает сумму наибольших двух из них
(если вы решили сравнивать все 3 числа между собой вручную - это очень плохая идея :) ).
====================================================================================================================

21/07/2021 =>
Урок по  git.
Homework:
Покрыть тестами функции из прошлого ДЗ:
- Вычислятель чисел Фибоначчи.
- Функция, которая возвращает сумму наибольших двух из трех переданных чисел.


Примечания:
- функции должны тестироваться в разных тестовых кейсах;
- обязательно нужно покрыть тестами, как позитивные, так и негативные кейсы.
- обязательно нужно покрыть тестами особые случаи.
- обязательно используйте parametrize для задания сразу нескольких тестовых кейсов в рамках одной тестовой функции.


Дополнительное задание со звездочкой: в своём репозитории ограничить возможность делать merge в main ветку до тех пор,
 пока кто-то из collaborators не поставить approve к пул-риквесту.
====================================================================================================================

24/07/2021 =>
Первый урок по базам данных, PostgreSQL
Homework:
Создать базу данных с произвольным именем для нашей будущей CRM. Определить в ней несколько таблиц:

Таблица ЗАЯВКИ (orders)
- id заявки (order_id) - целое число
- дата создания (created_dt) - date
- дата обновления заявки (updated_dt) - date
- тип заявки: например ремонт, консультация, плановое обслуживание (order_type) - текст
- описание (description) - текст
- статус заявки (status) - текст
- серийный номер аппарата (serial_no) - целое число
- id сотрудника-создателя заявки (creator_id) - целое число

Таблица СОТРУДНИКИ (employees)
- id сотрудника (employee_id) - целое число
- ФИО (fio) - текст
- должность (position) - текст
- id подразделения (department_id) - целое число

Таблица ПОДРАЗДЕЛЕНИЯ (departments)
- id подразделения (department_id) - целое число
- название подразделения (department_name) - текст

ВАЖНО! ИСПОЛЬЗОВАТЬ ТЕ ИМЕНА, КТОРЫЕ УКАЗАНЫ В ЗАДАНИИ!

Написать код создания таблиц на языке SQL, предусмотреть необходимые ограничения.
====================================================================================================================

28/07/2021 =>
Второй урок по базам данных: джоины, взаимодействие с БД через Питон, библиотека pyscopg2.
Homework:
Создать тестовый набор данных по каждой из таблиц в модуле python (лучше всего использовать список списков или
список кортежей). Далее написать скрипт, который будет осуществлять подключение к существующей БД и последовательно
запускать сначала скрипты на создание таблиц из прошлого ДЗ: departments, employees, orders, а затем загружал туда
данные.

Написать следующие запросы:
- запрос для получения заявок в определённом статусе (можно выбрать любой) за конкретный день, созданных
конкретным сотрудником;
- запрос, возвращающий список сотрудников и департаментов, в которых они работают;
- запрос, позволяющий получить количество заявок в определенном статусе (можно выбрать любой) по дням;
- запрос, который возвращает таблицу с двумя колонками: id заявок и ФИО сотрудников, которые их создали.
====================================================================================================================

31/07/2-2021 =>
foreign key, итераторы генераторы, ООП.
Homework:

====================================================================================================================